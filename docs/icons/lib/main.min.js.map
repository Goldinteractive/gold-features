{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 98c722f5c52234a5a044","webpack:///./src/index.js","webpack:///external \"js-base\""],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE_1__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_jsBase","USER_AGENT","navigator","userAgent","IE11_OR_OLDER","indexOf","NS_SVG","IconManager","options","_classCallCheck","assign","defaultOptions","svgJsonFile","Error","svgSpriteFile","$svgSprite","document","createElement","cb","_this","request","arguments","length","undefined","XMLHttpRequest","open","send","onload","e","innerHTML","responseText","body","insertBefore","childNodes","_this2","iconsData","JSON","parse","iconId","icons","$spriteIcon","querySelector","prefixId","equal","original","prefixClass","iconClass","wrapClass","accessible","responsive","responsiveClass","width","height","Icon","features","Feature","_this4","id","node","getAttribute","polyfilled","manager","console","error","$icon","createElementNS","managerOpts","attributes","getIconFromData","$iconNodes","getIconFromSprite","setAttribute","parseFloat","attribute","classList","add","style","ratioPadding","paddingBottom","$canvas","appendChild","forEach","$iconNode","cloneNode","$use","updateUseLink","onHub","currentHash","window","location","host","pathname","search","setAttributeNS"],"mappings":"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","file":"lib/main.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"js-base\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"feature-icons\", [\"js-base\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"feature-icons\"] = factory(require(\"js-base\"));\n\telse\n\t\troot[\"feature-icons\"] = factory(root[\"js-base\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 98c722f5c52234a5a044","import { features } from '@goldinteractive/js-base'\n\nconst USER_AGENT = navigator.userAgent\nconst IE11_OR_OLDER = USER_AGENT.indexOf('MSIE ') > -1 || USER_AGENT.indexOf('Trident/') > -1\n\nconst NS_SVG = 'http://www.w3.org/2000/svg'\nconst NS_XLINK = 'http://www.w3.org/1999/xlink'\n\n/**\n * Icon manager class.\n *\n * @param {Object} options\n *   Overwrite the [default options]{@link IconManager.defaultOptions}.\n */\nexport class IconManager {\n\n  constructor(options) {\n    this.options = Object.assign({}, IconManager.defaultOptions, options)\n\n    if (!this.options.svgJsonFile) {\n      throw new Error('No SVG json data file given!')\n    }\n\n    if (!this.options.svgSpriteFile) {\n      throw new Error('No SVG sprite file given!')\n    }\n\n    this.$svgSprite = document.createElement('div')\n  }\n\n  /**\n   * Inject markup of svg sprite into the page.\n   * @param {Function} cb - Callback when finished.\n   * @param {Function} [polyfillAlreadyLoadedIcons=true] - Whether already loaded icons should be polyfilled (ie11)\n   */\n  injectSprite(cb, polyfillAlreadyLoadedIcons = true) {\n    var request = new XMLHttpRequest()\n\n    request.open('GET', this.options.svgSpriteFile, true)\n    request.send()\n    request.onload = (e) => {\n      this.$svgSprite.innerHTML = request.responseText\n      document.body.insertBefore(this.$svgSprite, document.body.childNodes[0])\n      cb(this, e)\n    }\n  }\n\n  /**\n   * Load icon metadata.\n   * @param {Function} cb - Callback when finished.\n   */\n  loadData(cb) {\n    var request = new XMLHttpRequest()\n\n    request.open('GET', this.options.svgJsonFile, true)\n    request.send()\n    request.onload = (e) => {\n      this.iconsData = JSON.parse(request.responseText)\n      cb(this, e)\n    }\n  }\n\n  /**\n   * Return metadata of given icon.\n   *\n   * @param   {String} iconId - Icon id to return metadata from.\n   * @returns {Object}\n   */\n  getIconFromData(iconId) {\n    var iconData = this.iconsData.icons[iconId]\n    if (!iconData) throw new Error(`No icon \"${iconId}\" found in icon json data file \"${this.options.svgJsonFile}\"!`)\n    return this.iconsData.icons[iconId]\n  }\n\n  /**\n   * Return svg element from sprite.\n   *\n   * @param   {String} iconId - Icon id of the element to return.\n   * @returns {Element}\n   */\n  getIconFromSprite(iconId) {\n    var $spriteIcon = this.$svgSprite.querySelector(`#${this.options.prefixId}${iconId}`)\n    if (!$spriteIcon) throw new Error(`No icon \"${iconId}\" found in svg sprite file \"${this.options.svgSpriteFile}\"!`)\n    return $spriteIcon\n  }\n}\n\n/**\n * Default options for icon manager.\n *\n * @type {Object}\n * @property {String}  svgJsonFile - JSON file with icon metadata (attributes).\n * @property {String}  svgSpriteFile - SVG sprite file with all the icons.\n * @property {Boolean} [equal=false] - Whether the icons should have the same sizes by default.\n * @property {Boolean} [original=false] - Whether the icons should have their `width` and `height` attributes from the original svg by default.\n * @property {String}  [prefixId='icon-'] - Prefix used for the icon ids.\n * @property {String}  [prefixClass='-icon-'] - Prefix used for the icon classes.\n * @property {String}  [iconClass='icon-svg'] - Class used for icons.\n * @property {String}  [wrapClass='icon-box'] - Class used for wrapper.\n * @property {Boolean} [responsive=false] - Whether the icons should be responsive by default.\n * @property {String}  [responsiveClass='-responsive'] - Class used for responsive icons.\n * @property {Number}  [width=200] - Default width when original is used if no width has been defined.\n * @property {Number}  [height=200] - Default height when original is if no height has been defined.\n */\nIconManager.defaultOptions = {\n  svgJsonFile: null,\n  svgSpriteFile: null,\n  equal: false,\n  original: false,\n  prefixId: 'icon-',\n  prefixClass: '-icon-',\n  iconClass: 'icon-svg',\n  wrapClass: 'icon-box',\n  accessible: false,\n  responsive: false,\n  responsiveClass: '-responsive',\n  width: 200,\n  height: 200\n}\n\n/**\n * Icon feature class.\n */\nexport class Icon extends features.Feature {\n\n  init() {\n    this.id = this.node.getAttribute('data-icon')\n    this.polyfilled = false\n\n    if (!this.options.manager) {\n      throw new Error(`Icon \"${this.id}\" feature needs to be initialized with a IconManager instance!`)\n    }\n\n    if (!this.id) {\n      console.error('No \"data-icon\" attribute defined', this.node)\n      return false\n    }\n\n    var $icon = this.node.querySelector('svg') || document.createElementNS(NS_SVG, 'svg')\n\n    var manager = this.options.manager\n    var managerOpts = this.options.manager.options\n\n    var responsive = this.node.getAttribute('data-responsive')\n    this.responsive = responsive !== null ? true : managerOpts.responsive\n\n    var equal = this.node.getAttribute('data-equal')\n    this.equal = equal !== null ? true : managerOpts.equal\n\n    var accessible = this.node.getAttribute('data-accessible')\n    this.accessible = accessible !== null ? true : managerOpts.accessible\n\n    var original = this.node.getAttribute('data-original')\n    this.original = original !== null ? true : managerOpts.original\n\n    var attributes = manager.getIconFromData(this.id).attributes\n    var $iconNodes = [...manager.getIconFromSprite(this.id).childNodes]\n\n    if (!$iconNodes) {\n      console.error(`Icon \"${this.id}\" has no child nodes in svg sprite!`, this.node)\n      return false\n    }\n\n    $icon.setAttribute('role', 'img')\n    $icon.setAttribute('aria-hidden', this.accessible ? 'false' : 'true')\n\n    var width = attributes.width ? parseFloat(attributes.width) : null\n    var height = attributes.height ? parseFloat(attributes.height) : null\n\n    // take over original attributes\n    for (let attribute in attributes) {\n      if (attributes.hasOwnProperty(attribute)) {\n        if ((attribute != 'width'\n             && attribute != 'height')\n            || this.original\n        ) {\n          $icon.setAttribute(attribute, attributes[attribute])\n        }\n      }\n    }\n\n    // using setAttribute because ie11 and below doesn't support classList or setting className on svg\n    $icon.setAttribute('class', `${managerOpts.iconClass} ${managerOpts.prefixClass}${this.id}`)\n\n    this.node.classList.add(managerOpts.wrapClass)\n    this.node.classList.add(managerOpts.prefixClass + this.id)\n\n    // set classes and attributes based on settings\n    if (this.original) {\n      this.node.classList.add('-original')\n      this.node.style.width = width + 'px'\n      this.node.style.height = height + 'px'\n    }\n\n    if (this.equal) {\n      this.node.classList.add('-equal')\n    }\n\n    if (this.responsive) {\n      var ratioPadding = height / width * 100\n      this.node.style.paddingBottom = `${ratioPadding}%`\n      this.node.classList.add(managerOpts.responsiveClass)\n    } else {\n      // using to keep svg ratio for ie (http://nicolasgallagher.com/canvas-fix-svg-scaling-in-internet-explorer/)\n      var $canvas = document.createElement('canvas')\n      $canvas.classList.add('icon-canvas')\n      $canvas.setAttribute('width', width)\n      $canvas.setAttribute('height', height)\n      $canvas.setAttribute('aria-hidden', 'true')\n      this.node.appendChild($canvas)\n    }\n\n\n    if (IE11_OR_OLDER) {\n      // polyfill ie11 and older with appending icon paths directly\n      $iconNodes.forEach(($iconNode) => {\n        $icon.appendChild($iconNode.cloneNode(true))\n      })\n\n      this.polyfilled = true\n    } else {\n      // create use element to use svg from sprite\n      this.$use = document.createElementNS(NS_SVG, 'use')\n      this.updateUseLink()\n\n      // change link of use tag if state has changed\n      this.onHub('statechange', () => {\n        this.updateUseLink()\n      })\n\n      this.onHub('icons:update', () => {\n        this.updateUseLink()\n      })\n\n      $icon.appendChild(this.$use)\n    }\n\n    this.node.appendChild($icon)\n  }\n\n  updateUseLink() {\n    if (!this.$use) return\n    var currentDomain = '//' + window.location.host + window.location.pathname + window.location.search\n    var currentHash = `${currentDomain}#${this.options.manager.options.prefixId}${this.id}`\n    this.$use.setAttribute('href', currentHash)\n    this.$use.setAttributeNS(NS_XLINK, 'xlink:href', currentHash)\n  }\n\n}\n\n/**\n * Default options for icon feature.\n *\n * @type {Object}\n * @property {IconManager} manager - IconManager instance.\n */\nIcon.defaultOptions = {\n  manager: null\n}\n\nexport default Icon\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"js-base\"\n// module id = 1\n// module chunks = 0"],"sourceRoot":""}